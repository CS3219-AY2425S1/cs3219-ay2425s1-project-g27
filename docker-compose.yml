version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - demo-network

  user-service:
    build: ./user-service
    ports:
      - 3001:3001
    # volumes:
    #   - ./user-service/src:/usr/src/app
    #   - /usr/src/app/node_modules  # Avoid overwriting node_modules
    networks:
      - demo-network
    develop:
      watch:
        - action: sync
          path: ./user-service
          target: /app
          # ignore:
          #   - node_modules/
        - action: rebuild
          path: ./user-service/package.json

  question-service:
    build: ./question-service
    ports:
      - 3002:3002
    environment:
      - USER_SERVICE_URL=http://user-service:3001
    # volumes:
    #   - ./question-service/src:/usr/src/app
    #   - /usr/src/app/node_modules  # Avoid overwriting node_modules
    networks:
      - demo-network
    develop:
      watch:
        - action: sync
          path: ./question-service
          target: /app
          # ignore:
          #   - node_modules/
        - action: rebuild
          path: ./question-service/package.json
  matching-service:
    build: ./matching-service
    ports:
      - 3000:3000
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      QUESTION_API_URL: http://question-service:3002
      RABBITMQ_URL: amqp://rabbitmq:5672
      REDIS_URL: redis://redis:6379
    networks:
      - demo-network
    develop:
      watch:
        - action: sync
          path: ./matching-service
          target: /app
          # ignore:
          #   - node_modules/
        - action: rebuild
          path: ./matching-service/package.json
  collab-service:
    build: ./collaboration-service
    ports:
      - 3003:3003
    depends_on:
      redis:
        condition: service_started
    environment:
      REDIS_URL: redis://redis:6379
      QUESTION_SERVICE_URL: http://question-service:3002  
    networks:
      - demo-network
    develop:
      watch:
        - action: sync
          path: ./collaboration-service
          target: /app
          # ignore:
          #   - node_modules/
        - action: rebuild
          path: ./collaboration-service/package.json

  frontend:
    build: ./frontend
    ports:
      - 5173:5173  # Expose Vite's port
    # volumes:
    #   - ./frontend/src:/usr/src/app
    #   - /usr/src/app/node_modules  # Avoid overwriting node_modules
    networks:
      - demo-network
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          # ignore:
          #   - node_modules/
        - action: rebuild
          path: ./frontend/package.json

  nginx:
    image: nginx:latest
    ports:
      - "80:80"  # Expose HTTP on port 80
    depends_on:
      - user-service
      - question-service
      - matching-service
      - collab-service
      - frontend
    networks:
      - demo-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

networks:
  demo-network:
    driver: bridge
